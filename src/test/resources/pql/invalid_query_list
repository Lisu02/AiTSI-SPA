// Relation name errors
stmt s1,s2; procedure p; Select p, s2 such that Modifies (s2, _) such that Cals (p, "Second") with p.procName = "Third" ! Incorrect relation name: Cals

// Incomplete query
stmt s1; Selects s1 such that Uses (s1, _) ! Missing Select or Boolean
stmt s1,s2,s3; procedure p; ! Missing Select or Boolean
stmt s; Select s such Parent(1, s) ! Not recognize synonym: such
stmt s; Select s Follows(1,2) ! Not recognize synonym: Follows(1
! Query can't have empty body
stmt s; Select ! Missing return values
stmt s; Select such that Follows(1,2) ! Missing return values
stmt s; Select s such that ! Empty such that statement
stmt s; Select s such that Follows(1,2) Follows(2,3) ! Incorrect number of arguments in relation Follows: 5
stmt s; Select s such that Uses(s, "x") with ! Invalid number of =: 0 In statement: with
stmt s; variable v; Select s such that Uses(s, v) with v.varName="x ! Incorrect value "x. varName value should be of type string

// Wrong such that statement
procedure p; Select p such that Calls (p, 2) ! Incorrect argument type: 2 - INTEGER in relation Calls
stmt s; Select s such that Follows("a", 2) ! Incorrect argument type: "a" - STRING in relation Follows
stmt s; Select s such that Parent*(3, "x") ! Incorrect argument type: "x" - STRING in relation Parent*
stmt s; Select s such that Uses(s, 5) ! Incorrect argument type: 5 - INTEGER in relation Uses
stmt s; Select s such that Follows*(s) ! Incorrect number of arguments in relation Follows*: 1
stmt s; variable v; Select s such that Parent(s, v) ! Incorrect argument type: v - VARIABLE in relation Parent
variable v; Select v such that Uses(v, "x") ! Incorrect argument type: v - VARIABLE in relation Uses
stmt s; variable v; Select s such that Follows(v, s) ! Incorrect argument type: v - VARIABLE in relation Follows
stmt s; variable v; Select s such that Uses(s) ! Incorrect number of arguments in relation Uses: 1
stmt s; procedure p; Select s such that Parent(s, p) ! Incorrect argument type: p - PROCEDURE in relation Parent
variable v; stmt s; Select v such that Modifies(v, s) ! Incorrect argument type: v - VARIABLE in relation Modifies

// Wrong with statement
stmt s; variable v; Select s such that Modifies(s,v) with v.varName=5 ! Incorrect value 5. varName value should be of type string
stmt s; variable v; Select s such that Modifies(s,v) with s = "stmt" ! Invalid number of arguments: 2. In statement: [s, "stmt"]
stmt s; variable v; Select s such that Modifies(s,v) with s.stmt = "stmt" ! Invalid attribute: stmt. In statement: [s, stmt, "stmt"]
stmt s; variable v; Select s such that Uses(s, v) with v.varName=="x" ! Invalid number of =: 2 In statement: with v.varName=="x"
stmt s; variable v; Select s such that Modifies(s,v) with v.stmt#="x" ! Synonym v does not have attribute stmt#
stmt s; variable v; Select s such that Modifies(s,v) with v.procName="x" ! Synonym v does not have attribute procName

// Wrong synonym
Select s such that Uses(s, v) ! Not recognize synonym: s
stmt s; Select s such that Modifies(s, y) ! Synonym y not found
stmt s, s2, s; Select s such that Modifies(s, s2) ! Synonym of name s already exists
stmt s, s2; while s; Select s such that Modifies(s2, s) ! Synonym of name s already exists
stm s, s2; Select s such that Modifies(s, s2) ! Invalid synonym type: stm
